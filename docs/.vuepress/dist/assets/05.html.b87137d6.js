import{_ as n,o as s,c as a,a as e}from"./app.1b7d753a.js";const o={},i=e(`<h1 id="tsc-config" tabindex="-1"><a class="header-anchor" href="#tsc-config" aria-hidden="true">#</a> tsc config</h1><p>Creeremo un <code>tsconfig.json</code> semplice, configurando:</p><ul><li>un unico file typescript: <code>index.js</code></li><li>standard Javascript: <code>ES6</code></li><li>cartella di destinazione file transpilati Javascript: <code>dist</code></li></ul><p>Puoi quindi creare <code>tsconfig.json</code> vuoto e compilarlo in questo modo:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token comment">//tsconfig.json</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ES6&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;outDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dist&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;files&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;index.ts&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A questo punto puoi creare un file <code>index.ts</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//index.ts</span>
<span class="token keyword">const</span> <span class="token function-variable function">helloworld</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;Hello wolrd!!!&#39;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">helloworld</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Lanciare il comando di transcompilazione</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>tsc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Verr\xE0 creata la folder <code>dist</code> con i file transcompilati Javascript.</p><p>Per lanciare il file</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">node</span> /dist/index.js 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>O pi\xF9 semplicemente</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">node</span> /dist
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Dal momento che implicitamente cercher\xE0 il file <code>index.js</code> come entry point</p>`,15),t=[i];function c(p,l){return s(),a("div",null,t)}var r=n(o,[["render",c],["__file","05.html.vue"]]);export{r as default};
