import{_ as n,o as s,c as a,a as e}from"./app.1b7d753a.js";const t={},o=e(`<h1 id="moduli-interni" tabindex="-1"><a class="header-anchor" href="#moduli-interni" aria-hidden="true">#</a> Moduli interni</h1><p>Vediamo come si crea un modulo, come si esporta per renderlo visibile e come si importa in uno specifico modulo.</p><p>Crea un file Javascript, <code>constants.js</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//constants.js</span>

<span class="token keyword">const</span> names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Luca&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Mario&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Giovanni&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Laura&quot;</span><span class="token punctuation">]</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>names<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>module.exports</code> \xE8 un oggetto e permette di <strong>esportare</strong> verso l&#39;ambiente node altri oggetti o funzioni, variabili, classi..</p><p>All&#39;interno del file principale di esecuzione node, ad esempio <code>index.js</code> importa il modulo.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//index.js</span>
<span class="token keyword">const</span> constants <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./constants&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> longNames <span class="token operator">=</span> constants<span class="token punctuation">.</span>names<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> name<span class="token punctuation">.</span>length <span class="token operator">&gt;=</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>longNames<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Sintassi alternativa:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//index.js</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span>names<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./constants&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> longNames <span class="token operator">=</span> names<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> name<span class="token punctuation">.</span>length <span class="token operator">&gt;=</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>longNames<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>require()</code> permette quindi l&#39;import dei moduli.</p><p><strong>Attenzione</strong> che durante l&#39;import potrebbe essere eseguito del codice dal modulo</p><p>Vediamo un esempio:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//constants.js</span>

<span class="token keyword">const</span> names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Luca&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Mario&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Giovanni&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Laura&quot;</span><span class="token punctuation">]</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>names<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//index.js</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span>names<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./constants&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> longNames <span class="token operator">=</span> names<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> name<span class="token punctuation">.</span>length <span class="token operator">&gt;=</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>longNames<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//output</span>
<span class="token comment">//[&quot;Luca&quot;, &quot;Mario&quot;, &quot;Giovanni&quot;, &quot;Laura&quot;]</span>
<span class="token comment">//[ &#39;Mario&#39;, &#39;Giovanni&#39;, &#39;Laura&#39; ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>require</code> comporta l&#39;esecuzione di <code>console.log(names);</code> all&#39;interno di <code>constants.js</code> e tutto il codice eseguibile.</p>`,15),p=[o];function c(i,l){return s(),a("div",null,p)}var r=n(t,[["render",c],["__file","03.html.vue"]]);export{r as default};
