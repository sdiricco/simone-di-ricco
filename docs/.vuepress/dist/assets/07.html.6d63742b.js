import{_ as e,o as a,c as n,a as o}from"./app.1b7d753a.js";const s={},t=o(`<h1 id="package-json" tabindex="-1"><a class="header-anchor" href="#package-json" aria-hidden="true">#</a> Package.json</h1><p>L&#39;installazione di un pacchetto node comporta la creazione del file <code>package.json</code>, <code>package-lock.json</code> e la directory <code>node_modules</code>. Il <code>package.json</code> \xE8 un file importante per un progetto node, contiene tutte le informazioni necessaria allo sviluppo del progetto e alle dipendenze esterne.</p><p>Per creare correttamente un progetto node si utilizza lo script <code>npm init</code> o <code>npm init -y</code></p><ul><li><code>npm init</code>: chiede all&#39;utente una serie di informazioni di progetto e crea il <code>package.json</code></li><li><code>npm init -y</code>: crea un <code>package.json</code> con valori di default.</li></ul><p>Lancia lo script <code>npm init</code> o <code>npm init -y</code> e apri il <code>package.json</code>,</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token comment">//package.json</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;code&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index.js&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;keywords&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;license&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ISC&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A questo punto il progetto node \xE8 inizializzato correttamente e puoi passare alla creazione di file o scaricare pacchetti da npm.</p><h2 id="package-lock-json" tabindex="-1"><a class="header-anchor" href="#package-lock-json" aria-hidden="true">#</a> Package-lock.json</h2><p>Nel <code>package-lock.json</code> sono memorizzate le versioni esatte dei pacchetti utilizzate dal progetto, vediamo quando pu\xF2 essere utile. Supponi di installare lodash. Nel <code>package.json</code> troverai il pacchetto installato tra le <code>dependecies</code></p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;lodash&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.17.21&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>La nomenclatura <code>^xx.xx.xx</code> indica che la versione del pacchetto pu\xF2 essere <code>xx.xx.xx</code> o superiore.</p><p>All&#39;interno del <code>package-lock.json</code> trovi la versione esatta:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;node_modules/lodash&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;4.17.21&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;resolved&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;integrity&quot;</span><span class="token operator">:</span> <span class="token string">&quot;sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Immagina adesso che il tuo progetto abbia diversi pacchetti e che sia in sviluppo da molto tempo. Finch\xE8 mantieni il <code>package-lock.json</code> le versioni rimangono quelle relative all&#39;ultima volta che il pacchetto \xE8 stato installato. I pacchetti su npm tuttavia sono in constante aggiornamento quindi \xE8 probabile che installando nuovamente determinati pacchetti le versioni si aggiornino. Ora, se tu dovessi cancellare il <code>package-lock.json</code> e reinstallare tutti i pacchetti, verrebbero installate le ultime versioni. Nella maggior parte dei casi aggiornare un pacchetto o pi\xF9 pacchetti non rappresenta un problema ma in alcuni casi specifici potrebbe diventarlo dal momento che possono essere utilizzate delle vecchie sintassi considerate <code>deprecated</code> e, a volte, potrebbe compromettere il funzionamento del software. Il <code>package-lock.json</code> garantisce che l&#39;installazione dei pacchetti sia relativa alla specifica versione riportata all&#39;interno dello stesso. Quindi, al fine di ricostruire esattamente l&#39;ambiente di sviluppo di un particolare progetto \xE8 necessario avere soltanto il <code>package.json</code> e il <code>package-lock.json</code>. La directory <code>node_modules</code> non \xE8 importante dal momento che con <code>npm i</code>, per mezzo del <code>package.json</code> e <code>package-lock.json</code> verrebbe esattamente ricostruita. Se il tuo progetto \xE8 sottoposto a versionamento (git, svn) la cartella <code>node_modules</code> va esclusa dai file da committare.</p><h2 id="qualche-dettaglio-in-piu-sulle-versioni" tabindex="-1"><a class="header-anchor" href="#qualche-dettaglio-in-piu-sulle-versioni" aria-hidden="true">#</a> Qualche dettaglio in pi\xF9 sulle versioni</h2><p>Ogni pacchetto \xE8 rappresentato da un numero di versione che comprende tre cifre: <code>x.y.z</code></p><ul><li><code>x</code>: <strong>major update</strong>, aggiornamenti importanti. Potrebbero compromettere l&#39;intera struttura del pacchetto ed essere non retrocompatibili</li><li><code>y</code>: <strong>minor update</strong>, aggiornamenti minori. Potrebbero aggiungere funzionalit\xE0 aggiuntive anche non completamente testate o risolvere alcuni bugfix ma garantiscono retrocompatibilit\xE0 a parit\xE0 di minor update</li><li><code>z</code>: <strong>patch</strong>, bug fix, aggiornamenti minimi. Non compromettono la stabilit\xE0 del pacchetto</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>x.y.z
<span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span>
<span class="token operator">|</span> <span class="token operator">|</span> patch
<span class="token operator">|</span> minor update
major update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),i=[t];function c(p,l){return a(),n("div",null,i)}var d=e(s,[["render",c],["__file","07.html.vue"]]);export{d as default};
