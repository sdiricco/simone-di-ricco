import{_ as e,o as i,c as o,a}from"./app-gS7-BVVh.js";const n="/assets/02-9jwX-nnM.jpg",t={},r=a('<h1 id="_2-scenario" tabindex="-1"><a class="header-anchor" href="#_2-scenario" aria-hidden="true">#</a> 2. Scenario</h1><blockquote><p><em>Una panoramica sui principali concetti che hanno a che fare con il Responsive Web Design moderno: dai design pattern ai web trends.</em></p></blockquote><p>Link copiato negli appunti Il contesto della creazione di interfacce utente e di esperienze di utilizzo è molto ricco, se non sovraffollato, di prodotti, input, tools, frameworks e anche mode del momento. Cerchiamo di fare un po’ di chiarezza.</p><h2 id="tools-frameworks-vs-competenza-e-esperienza" tabindex="-1"><a class="header-anchor" href="#tools-frameworks-vs-competenza-e-esperienza" aria-hidden="true">#</a> Tools &amp; Frameworks vs Competenza e Esperienza</h2><p>Il mondo open source ha contribuito alla generazione di numerose risorse per designer e sviluppatori, ma in questo caos è sempre più difficile scegliere quali strumenti usare e a volte è la qualità di ciò che facciamo a risentirne.</p><p>Anche se può sembrare scontato, uno dei criteri fondamentali per orientarci tra gli strumenti, senza farsi troppo condizionare dalle mode, è quello di analizzare le features che ci servono realmente per i nostri progetti, per evitare che manchino quelle necessarie o che ce ne siano troppe.</p><p>In realtà molti strumenti si equivalgono, l’importante è saperli usare nel modo giusto. Per questo, nella nostra cassetta degli attrezzi non dovrebbero mancare:</p><ul><li>professionalità</li><li>competenza</li><li>esperienza</li><li>conoscenza del dominio</li></ul><p>Sfatiamo il mito secondo cui i tool possono colmare <strong>gap di conoscenza</strong>: un professionista utilizza diversi strumenti a supporto della sua produttività, ma possiede tutto il know-how per sapere cosa deve fare e come a prescindere dallo strumento che usa.</p><p>Inoltre, usare i tool richiede un investimento di tempo, e in certi casi è meglio investire il tempo prima per acquisire delle competenze e poi per comprendere i tools.</p><p>Nel corso della guida saranno comunque indicati tools e risorse utili nelle varie fasi, ma vogliamo dare priorità al “come” realizzare il progetto piuttosto che a “cosa” usare.</p><h2 id="web-trends" tabindex="-1"><a class="header-anchor" href="#web-trends" aria-hidden="true">#</a> Web trends</h2><p>I <strong>web design trends</strong> a livello di interfaccia e di stile grafico sono dettati dai grandi player del mercato in termini di brand e prodotti: Google, Apple, Microsoft, Spotify, ecc… Spesso sono i “big” a decidere le sorti delle mode sul web anche a livello grafico basico in termini di forme, colori e stile. Così il web è saturo di siti che si somigliano.</p><h2 id="flat-design-scheumorfismo-e-material-design" tabindex="-1"><a class="header-anchor" href="#flat-design-scheumorfismo-e-material-design" aria-hidden="true">#</a> Flat design, scheumorfismo e Material design</h2><p>La crescente diffusione degli smartphones e la conseguente navigazione su browser mobile ha favorito il boom del <strong>Flat design</strong>: colori piatti, forme geometriche, icone, tipografia minimalista, ombre soppiantate da forme che simulano ombre allungate per alludere ad una terza dimensione, ma in maniera completamente lontana dal reale</p><p>Il tutto è reso possibile da HTML5, CSS3 e JS, che permettono una riproduzione via codice di qualunque elemento grafico, che un tempo sarebbe per forza stato un’immagine caricata come risorsa esterna del browser.</p><p>Per le sue caratteristiche il flat design nasce in risposta alle necessità del responsive web design.</p><p>Dicendo addio a sfumature, effetti elaborati, orpelli, grafiche pesanti e tentativi di riprodurre in maniera verosimile oggetti reali a favore di elementi piatti e forme geometriche, il flat design nasce in contrapposizione allo <strong>scheumorfismo</strong> che aveva dominato i decenni precedenti.</p><p>Ora che i software sono così potenti da poterci aiutare a riprodurre la realtà in modo realistico, ci concentriamo sulle possibilità del codice di realizzare la grafica in maniera interattiva e fruibile su diversi schermi.</p><p><img src="'+n+'" alt=""></p><p>Se il flat design risulta troppo piatto poiché toglie ogni ornamento grafico e rende interfacce ed elementi dei siti molto simili tra di loro, Google decide di partire da lì per creare il Material design, re-inserendo elementi scheumorfici come le ombre per indicare i livelli di profondità e definendo questo tipo di design attraverso guidelines specifiche e dettagliate.</p><p>Tra gli altri trends degli ultimi anni ci sono le <strong>infografiche</strong>, sorta di storytelling di informazioni o dati attraverso rappresentazioni grafiche.</p><h2 id="responsive-web-design" tabindex="-1"><a class="header-anchor" href="#responsive-web-design" aria-hidden="true">#</a> Responsive web design</h2><p>I recenti design trends sono nati e si stanno evolvendo anche in funzione del cappello più grande del Responsive web design (RWD): l’insieme di tecniche per la progettazione e lo sviluppo di siti web responsivi, capaci quindi di adattarsi graficamente alle risoluzioni di schermi di diversi dispositivi (desktop, tablet, smartphone…).</p><p>Il web design tradizionale è ormai sparito ma anche se l’RWD è il nuovo standard, non tutti i siti ancora sono stati ri-progettati o progettati correttamente seguendo le best practices del design responsivo.</p><p>Fare il porting da un sito non responsive ad uno responsive non è immediato e spesso è necessario progettare il sito ex-novo. Tuttavia il passaggio si rende necessario sia per una questione culturale sia per l’ottimizzazione sui motori di ricerca (SEO) che tendono a penalizzare i siti che non sono responsive.</p><p>I dispositivi mobili hanno una serie di limiti. In primis, lo schermo e poi le condizioni in cui il prodotto viene fruito possono essere le più disparate, e per questo è fondamentale un approccio <strong>Mobile first</strong>, che metta in risalto i contenuti, faciliti la leggibilità dei testi e semplifichi drasticamente navigazione, organizzazione dei contenuti e, se presenti, flussi di acquisto.</p><p>L’impaginazione <strong>pixel perfect</strong> (che definisce posizione e dimensione di ogni elemento fino al singolo pixel) non è più possibile, o almeno non è più così utile poiché l’importante è la definizione del layout e del suo comportamento per le diverse risoluzioni identificate da “breakpoints”.</p><p>I <strong>breakpoints</strong> sono le risoluzioni di riferimento per cui l’interfaccia verrà progettata e sviluppata. Nelle tantissime risoluzioni tra un breakpoint e l’altro il sito dovrà scalare ed adattarsi in modo armonico allo schermo, sfruttando le percentuali e filtrando i contenuti in base alla loro reale importanza</p><p>Questo concetto rivoluziona il mondo della progettazione grafica: un designer non saprà mai esattamente come sarà vista la sua interfaccia grafica in termini di dimensioni, colori, ecc…</p><p>Scardinate le certezze grafiche del pixel, proporzioni, percentuali, omogeneità delle spaziature e ordinamenti avranno più importanza rispetto a colori, ornamenti, posizionamenti puntuali e relativi a punti precisi della <strong>viewport</strong> (area della pagina visibile dall’utente, legata alla risoluzione del device). A risoluzioni sempre incerte, anche il concetto di “above the fold” tende a vacillare. Per “<strong>above the fold</strong>” (letteralmente “sopra la piega”) si intende la porzione immediatamente visibile della pagina prima dello scroll da parte</p><p>dell’utente.</p><h2 id="ui-design-patterns-e-o-web-components" tabindex="-1"><a class="header-anchor" href="#ui-design-patterns-e-o-web-components" aria-hidden="true">#</a> UI design patterns e/o Web Components</h2><p>Va molto di moda utilizzare la parola “pattern” riferito a qualunque argomento abbia a che fare con lo sviluppo, sia esso grafico o di codice. Ma cosa significa esattamente <strong>UI design patterns</strong>? Sono effettivamente dei patterns ossia degli schemi di elementi di UI, anche detti UI o UX patterns.</p><p>A fronte di alcune esigenze funzionali, di navigazione o di presentazione, esistono componenti già progettati da qualcuno talmente efficaci da essersi diffusi ed usati in molte applicazioni fino quasi a diventare uno standard implicito, elementi di uso comune.</p><p>Gli UI patterns sono l’applicazione di soluzioni trovate a problemi pratici, normalmente legati all’usabilità e/o a vincoli di vario tipo (risoluzione, condizioni di utilizzo, performances, ecc…).</p><p>Questi componenti includono un comportamento legato alla loro interazione con l’utente. È necessario individuare quali UI patterns sono necessari e funzionano nel nostro sito, quindi il contesto è fondamentale poiché uno UI pattern diffusissimo può non servire o non funzionare nel nostro contesto. Inoltre, l’interfaccia mette insieme più componenti che quindi devono funzionare anche a livello di sistema e non solo singolarmente.</p><p>Esempi di UI patterns possono essere:</p><ul><li>hambuger menu per la navigazione</li><li>card layout</li><li>navigazione a tab</li><li>accordion</li><li>long scroll</li><li>scroll to</li><li>immagini “hero”</li><li>social sharing, ecc...</li></ul><p>L’idea di pattern richiama il concetto di modularità che ben si sposa con l’approccio di sviluppo a componenti o widget web.</p><p>Un insieme di UI patterns dallo stesso aspetto (look &amp; feel) si può definire come una <strong>UI library o UI pattern library</strong> che è appunto l’implementazione di questi componenti, disponibili in una pagina web di documentazione.</p><p>Gli UI patterns e la loro implementazione stabiliscono il legame diretto tra mondo UX e mondo sviluppo: data una funzionalità o un contenuto richiesto nel sito, lo UI pattern progettato dal designer indica allo sviluppatore come un elemento deve apparire visivamente e funzionare a livello di interazione.</p><h2 id="conclusioni" tabindex="-1"><a class="header-anchor" href="#conclusioni" aria-hidden="true">#</a> Conclusioni</h2><p>Tutti i prodotti sul web hanno in comune un elemento: hanno un’interfaccia con cui l’utente si relaziona in maniera interattiva contribuendo a determinare la user experience. Un approccio olistico è molto importante per comprendere le interdipendenze e fare un lavoro di qualità pronto per essere lavorato ed evoluto nelle fasi successive per la creazione del prodotto. Oltre a comprendere bene le aree di intervento e quindi le competenze necessarie per lavorare nelle varie fasi è fondamentale conoscere lo scenario in cui ci si muove.</p>',44),s=[r];function l(p,c){return i(),o("div",null,s)}const m=e(t,[["render",l],["__file","02-scenario.html.vue"]]);export{m as default};
